{
    "collab_server" : "",
    "contents" : "## Generate all data for the package\n## Source this from the top level of a development copy of the package.\n\n# year & in_service columns\nsource('data-raw/generators/form860processed.R')\n# summer_capacity ~ MW\n# heat_rate ~ BTU/ kWh\nform860processed <- prep.form860processed(\"data-raw/generators/form860raw.tsv\", \"data-raw/generators/form860retirement.txt\")\ndevtools::use_data(form860processed, overwrite=TRUE)\n\nsource('data-raw/mappingfiles/mapping.R')\nmapping <- prep.mapping('data-raw/mappingfiles/form860fuels.tsv', 'data-raw/mappingfiles/overnight_categories.tsv')\ndevtools::use_data(mapping, overwrite=TRUE)\n\nsource('data-raw/costs/gdpdeflator.R')\ngdpdeflator <- calc.gdpdeflator(\"data-raw/GDPDEF.csv\", \"1975\") # reference year\n\nsource('data-raw/costs/fuelprices.R')\n# fuel.price ~ $/BTU\nfuelprices <- prep.fuelprices(\"data-raw/energy.prices.txt.gz\", \"data-raw/uranium.prices.txt.gz\", gdpdeflator)\ndevtools::use_data(fuelprices, overwrite=TRUE)\n\nsource('data-raw/costs/marginalcosts.R')\n# marginal.cost ~ $/MWh\nmarginalcosts <- prep.marginalcosts(mapping, form860processed, fuelprices) # can include maximumheatrates by adding as argument\ndevtools::use_data(marginalcosts, overwrite=TRUE)\n\n## Should use projected online year (1996-2022) instead of year of report (1997-2015)\nsource('data-raw/costs/capitalcosts.R')\n# base.overnight ~ $/MW\n# variable.o.m, fixed.o.m ~ $/MWh\ncapitalcosts <- prep.capitalcosts(\"data-raw/costs/overnight.cost.tsv\", gdpdeflator)\ndevtools::use_data(capitalcosts, overwrite=TRUE)\n\nmaster <- form860processed %>%\n  select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%\n  left_join(mapping, by=c('prime_mover', 'fuel')) %>%\n  select(-prime_mover, -fuel) %>%\n  left_join(fuelprices, by=c(\"year\", \"fuel_general\")) %>%\n  ## NO HEATRATE REGRESSION, CALCULATE MARGINALCOSTS DIRECTLY\n  mutate(marginal.cost = fuel.price*heat_rate) %>% # $/Btu * Btu/Kwh = $/Kwh\n  mutate(marginal.cost = marginal.cost*1e3) %>% # $/kwh -> $/Mwh\n  left_join(capitalcosts, by=c(\"year\", \"overnight_category\")) %>%\n  arrange(utility_code, plant_code, generator_code, overnight_category, fuel_general, year,\n          heat_rate, fuel.price, marginal.cost, base.overnight, variable.o.m, fixed.o.m)\n\nwrite.csv(master, 'master.csv', row.names=F)\n\n# couldn't get to work, saved in long format\nspread(key=year, value=heat_rate)\ndcast(overnight_category+fuel_general+utility_code+plant_code+generator_code~ year, value.var = \"heat_rate\")\n\n",
    "created" : 1510693613111.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3654855757",
    "id" : "3C9EE17C",
    "lastKnownWriteTime" : 1510698379,
    "last_content_update" : 1510698379915,
    "path" : "C:/Users/xavie/Desktop/energy.markets/data-raw/generatedata.R",
    "project_path" : "data-raw/generatedata.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}