select(-fuel_2, -fuel_3) %>%
dplyr::rename(fuel = fuel_1) %>%
mutate(generator_code = tolower(generator_code)) %>%
mutate(generator_code = gsub(" ","", generator_code)) %>%
mutate(generator_code = gsub("[^a-zA-Z0-9]","", generator_code)) %>%
mutate(summer_capacity = as.numeric(summer_capacity),
prime_mover = as.character(prime_mover),
status_code_1 = as.character(status_code_1),
status_code_2 = as.character(status_code_2),
fuel = as.character(fuel))
tit <- 'form860raw'
df <- form860raw
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot( aes(summer_capacity) ) +
geom_histogram() +
labs(title=tit)
tit <- 'form860CAsupplemented'
df <- form860CAsupplemented
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot( aes(summer_capacity) ) +
geom_histogram() +
labs(title=tit)
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
labs(title=tit)
tit <- 'form860processed'
df <- form860processed
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot( aes(summer_capacity) ) +
geom_histogram() +
labs(title=tit)
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
labs(title=tit)
max(form860processed$summer_capacity, na.rm=T)
min(form860processed$summer_capacity, na.rm=T)
tit <- 'form860raw'
df <- form860raw
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
labs(title=tit)
tit <- 'form860CAsupplemented'
df <- form860CAsupplemented
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
labs(title=tit)
tit <- 'form860raw'
df <- form860raw
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot( aes(heat_rate) ) +
geom_histogram() +
labs(title=tit)
tit <- 'form860CAsupplemented'
df <- form860CAsupplemented
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot( aes(heat_rate) ) +
geom_histogram() +
labs(title=tit)
tit <- 'form860raw'
df <- form860raw
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
xlim(0, 1e5) +
labs(title=tit)
tit <- 'form860CAsupplemented'
df <- form860CAsupplemented
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
xlim(0, 1e5) +
labs(title=tit)
df %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
labs(title=tit)
max(form860CAsupplemented$heat_rate, na.rm=T)
filter(form860CAsupplemented, heat_rate==833000)
View(mapping)
source('C:/Users/xavie/Desktop/energy.markets/data-raw/form860processed.R')
source('C:/Users/xavie/Desktop/energy.markets/data/generatedata.R')
getwd()
source('C:/Users/xavie/Desktop/energy.markets/data/generatedata.R')
source('C:/Users/xavie/Desktop/energy.markets/data/generatedata.R')
??melt
devtools::use_package('reshape2')
library(reshape2)
source('C:/Users/xavie/Desktop/energy.markets/data/generatedata.R')
devtools::use_package('lubridate')
library(lubridate)
source('C:/Users/xavie/Desktop/energy.markets/data/generatedata.R')
mapping <- mapping
generators <- form860CAsupplemented %>%
select(year, generator_code, fuel, prime_mover, heat_rate)
industry <- read.delim("data-raw/overnight.cost.tsv") %>%
select(year=online, overnight_category, AEO=heat.rate) %>%
filter(overnight_category %in% unique(mapping$overnight_category)) %>%
group_by(year, overnight_category) %>%
summarise(AEO=mean(AEO))
maximumheatrates <- maximumheatrates
fuelprices <- fuelprices
generators <- generators %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
filter(! is.na(overnight_category)) %>%
filter(! is.na(fuel_general)) %>%
group_by( overnight_category, fuel_general, year) %>%
summarize(heatrate = mean(heat_rate, na.rm=TRUE)) %>%
ungroup() %>%
# if no data for an entire year, avg == NaN
mutate(heatrate = ifelse(is.nan(heatrate), NA, heatrate))
names(generators)
source('C:/Users/xavie/Desktop/energy.markets/data-raw/marginalcosts.R')
??complete
source('C:/Users/xavie/Desktop/energy.markets/data-raw/marginalcosts.R')
names(marginalcosts)
source('data-raw/capitalcosts.R')
source('C:/Users/xavie/Desktop/energy.markets/data/generatedata.R')
load_data(pkg='energy.markets')
devtools::load_data(pkg='energy.markets')
devtools::load_data(pkg='.')
devtools::load_data(pkg='data')
getwd()
load_data(pkg=as.package('data'))
devtools::load_data(pkg=as.package('data'))
library(devtools)
load_data(pkg=as.package('data'))
load_data(pkg='data/')
getwd()
load_data(pkg='data')
names(form860CAsupplemented)
form860CAsupplemented %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
#filter(overnight_category %in% c('combined cycle', 'combustion turbine')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
xlim(0, 1.25e5) +
#ylim(0,1e2) +
facet_wrap(~overnight_category)
overnightmapping <- read.delim('data-raw/overnight_categories.tsv') %>%
select(prime_mover, fuel, overnight_category=overnight_category.updated) %>%
arrange(prime_mover,fuel)
form860CAsupplemented %>%
left_join(overnightmapping, by=c('prime_mover', 'fuel')) %>%
#filter(overnight_category %in% c('combined cycle', 'combustion turbine')) %>%
ggplot(aes(x=heat_rate, y=summer_capacity)) +
geom_point() +
xlim(0, 1.25e5) +
#ylim(0,1e2) +
facet_wrap(~overnight_category)
names(form860CAsupplemented)
names(marginalcosts)
names(capitalcosts)
unique(marginalcosts$overnight_category)
names(mapping)
unique(mapping$overnight_category)
categories <- read.delim('data-raw/overnight_categories.tsv') %>%
select(prime_mover, fuel, overnight_category = overnight_category.updated)
names(categories)
unique(categories$overnight_category)
names(capitalcosts)
names(marignalcosts)
names(marginalcosts)
unique(marginalcosts$overnight_category)
mapping <- mapping
generators <- form860CAsupplemented %>%
select(year, generator_code, fuel, prime_mover, heat_rate)
industry <- read.delim("data-raw/overnight.cost.tsv") %>%
select(year=online, overnight_category, AEO=heat.rate) %>%
filter(overnight_category %in% unique(mapping$overnight_category)) %>%
group_by(year, overnight_category) %>%
summarise(AEO=mean(AEO))
maximumheatrates <- maximumheatrates
fuelprices <- fuelprices
generators <- generators %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
filter(! is.na(overnight_category)) %>%
filter(! is.na(fuel_general)) %>%
group_by( overnight_category, fuel_general, year) %>%
summarize(heatrate = mean(heat_rate, na.rm=TRUE)) %>%
ungroup() %>%
# if no data for an entire year, avg == NaN
mutate(heatrate = ifelse(is.nan(heatrate), NA, heatrate))
names(generators)
unique(generators$overnight_category)
names(mapping)
unique(mapping$overnight_category)
unique(mapping$overnight_category)
categories <- read.delim('data-raw/overnight_categories.tsv')
names(categories)
categories <- read.delim('data-raw/overnight_categories.tsv') %>%
select(prime_mover, fuel, overnight_category.updated) %>%
dplyr::rename(overnight_category=overnight_category.updated)
unique(categories$overnight_category)
source('C:/Users/xavie/Desktop/energy.markets/data-raw/mapping.R')
source('C:/Users/xavie/Desktop/energy.markets/data-raw/marginalcosts.R')
unique(marginalcosts$overnight_category)
source('C:/Users/xavie/Desktop/energy.markets/data-raw/marginalcosts.R')
source('C:/Users/xavie/Desktop/energy.markets/data/generatedata.R')
names(form860CAsupplemented)
names(marginalcosts)
unique(marginalcosts$overnight_category)
source('C:/Users/xavie/Desktop/energy.markets/data/generatecsv.R')
source('C:/Users/xavie/Desktop/energy.markets/data/generatecsv.R')
library(energy.markets)
names(form860CAsupplemented)
names(marginalcosts)
unique(marginalcosts$overnight_category)
names(capitalcosts)
unique(capitalcosts$overnight_category)
source('C:/Users/xavie/Desktop/energy.markets/generatecsv.R')
names(form860casupplemented)
names(form860CAsupplemented)
names(marginalcosts)
unique(marginalcosts$fuel_general)
View(marginalcosts)
View(filter(marginalcosts, !is.na(marginal.cost)))
sub <- filter(marginalcosts, !is.na(marginal.cost))
names(sub)
unique(sub$overnight_category)
unique(mapping$overnight_category)
unique(sub$fuel_general)
names(marginalcosts)
source('C:/Users/xavie/Desktop/energy.markets/data-raw/marginalcosts.R')
names(marginalcosts)
View(mapping)
write.csv(mapping, 'mapping.csv', row.names=F)
library(energy.markets)
truncate <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
select(overnight_category, fuel_general, utility_code, plant_code, generator_code, heat_rate, year)
library(magrittr)
library(dplyr)
library(tidyr)
truncate <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
select(overnight_category, fuel_general, utility_code, plant_code, generator_code, heat_rate, year)
View(truncate)
names(form860processed0)
names(form860processed)
names(mapping)
names(fuelprices0)
names(fuelprices)
truncate <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year, fuel_general"))
truncate <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel)
names(truncate)
truncate <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year", "fuel_general"))
names(truncate)
truncate <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year", "fuel_general")) %>%
mutate(marginal.cost = fuel.price*heat_rate) %>% # $/Btu * Btu/Kwh = $/Kwh
mutate(marginal.cost = marginal.cost*1e3)
names(truncate)
names(capitalcosts)
truncate <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year", "fuel_general")) %>%
mutate(marginal.cost = fuel.price*heat_rate) %>% # $/Btu * Btu/Kwh = $/Kwh
mutate(marginal.cost = marginal.cost*1e3) %>% # $/kwh -> $/Mwh
left_join(capitalcosts, by=c("year", "overnight_category"))
names(truncate)
truncate <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year", "fuel_general")) %>%
mutate(marginal.cost = fuel.price*heat_rate) %>% # $/Btu * Btu/Kwh = $/Kwh
mutate(marginal.cost = marginal.cost*1e3) %>% # $/kwh -> $/Mwh
left_join(capitalcosts, by=c("year", "overnight_category")) %>%
arrange(utility_code, plant_code, generator_code, overnight_category, fuel_general, year,
heat_rate, fuel.price, marginal.cost, base.overnight, variable.o.m, fixed.o.m)
View(truncate)
unique(select(filter(truncate, !is.na(marginal.cost)), fuel_general))
unique(truncate$overnight_category)
source('C:/Users/xavie/Desktop/energy.markets/data-raw/generatedata.R')
??MELT
library(reshape2)
devtools::use_package("reshape2")
source('data-raw/maximumheatrates.R')
source('data-raw/fuelprices.R')
devtools::use_package("lubridate")
library(lubridate)
source('data-raw/fuelprices.R')
source('data-raw/marginalcosts.R')
source('data-raw/capitalcosts.R')
names(mapping)
unique(mapping$overnight_category)
unique(mapping$fuel_general)
names(fuelprices)
unique(fuelprices$fuel_general)
names(marginalcosts)
unique(marginalcosts$overnight_category)
unique(marginalcosts$fuel_general)
unique(select(filter(complete.cases(marginalcosts)), overnight_category))
unique(select(filter(marginalcosts, complete.cases(.)), overnight_category))
?complete.cases
unique(select(complete.cases(marginalcosts), overnight_category))
unique(select(filter(marginalcosts, complete.cases(marginalcosts)), overnight_category))
unique(select(marginalcosts[complete.cases(marginalcosts),], overnight_category))
names(marginalcosts)
test <- filter(marginalcosts, !is.na(marginal.cost))
names(test)
unique(test$overnight_category)
unique(test$fuel_general)
names(capitalcosts)
unique(capitalcosts$overnight_category)
master <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year", "fuel_general")) %>%
mutate(marginal.cost = fuel.price*heat_rate) %>% # $/Btu * Btu/Kwh = $/Kwh
mutate(marginal.cost = marginal.cost*1e3) %>% # $/kwh -> $/Mwh
left_join(capitalcosts, by=c("year", "overnight_category")) %>%
arrange(utility_code, plant_code, generator_code, overnight_category, fuel_general, year,
heat_rate, fuel.price, marginal.cost, base.overnight, variable.o.m, fixed.o.m) %>%
filter(overnight_category %in% c("coal", "wind", "conventional combustion turbine", "steam turbine", "hydro", "conventional combined cycle",
"biomass", "NA", "nuclear", "geothermal", "photovoltaic", "solar thermal", "igcc") )
master <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year", "fuel_general")) %>%
mutate(marginal.cost = fuel.price*heat_rate) %>% # $/Btu * Btu/Kwh = $/Kwh
mutate(marginal.cost = marginal.cost*1e3) %>% # $/kwh -> $/Mwh
left_join(capitalcosts, by=c("year", "overnight_category")) %>%
arrange(utility_code, plant_code, generator_code, overnight_category, fuel_general, year,
heat_rate, fuel.price, marginal.cost, base.overnight, variable.o.m, fixed.o.m) %>%
filter(overnight_category %in% c("coal", "wind", "conventional combustion turbine", "steam turbine", "hydro", "conventional combined cycle",
"biomass", "NA", "nuclear", "geothermal", "photovoltaic", "solar thermal", "igcc") )
library(magrittr)
library(dplyr)
library(energy.markets)
master <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year", "fuel_general")) %>%
mutate(marginal.cost = fuel.price*heat_rate) %>% # $/Btu * Btu/Kwh = $/Kwh
mutate(marginal.cost = marginal.cost*1e3) %>% # $/kwh -> $/Mwh
left_join(capitalcosts, by=c("year", "overnight_category")) %>%
arrange(utility_code, plant_code, generator_code, overnight_category, fuel_general, year,
heat_rate, fuel.price, marginal.cost, base.overnight, variable.o.m, fixed.o.m) %>%
filter(overnight_category %in% c("coal", "wind", "conventional combustion turbine", "steam turbine", "hydro", "conventional combined cycle",
"biomass", "NA", "nuclear", "geothermal", "photovoltaic", "solar thermal", "igcc") )
View(master)
View(master[complete.cases(master)])
View(master[complete.cases(master)],)
View(master[complete.cases(master),])
View(filter(master, !is.na(marginal.cost)))
names(capitalcosts)
unique(capitalcosts$overnight_category)
View(filter(capitalcosts, overnight_category=='conventional combustion turbine'))
master <- form860processed %>%
select(year, utility_code, plant_code, generator_code, prime_mover, fuel, heat_rate) %>%
left_join(mapping, by=c('prime_mover', 'fuel')) %>%
select(-prime_mover, -fuel) %>%
left_join(fuelprices, by=c("year", "fuel_general")) %>%
mutate(marginal.cost = fuel.price*heat_rate) %>% # $/Btu * Btu/Kwh = $/Kwh
mutate(marginal.cost = marginal.cost*1e3) %>% # $/kwh -> $/Mwh
left_join(capitalcosts, by=c("year", "overnight_category")) %>%
arrange(utility_code, plant_code, generator_code, overnight_category, fuel_general, year,
heat_rate, fuel.price, marginal.cost, base.overnight, variable.o.m, fixed.o.m) %>%
filter(overnight_category %in% c("coal", "wind", "conventional combustion turbine", "steam turbine", "hydro", "conventional combined cycle",
"biomass", "NA", "nuclear", "geothermal", "photovoltaic", "solar thermal", "igcc") )
names(capitalcosts)
View(filter(master, overnight_category=='conventional combustion turbine'))
View(filter(master, overnight_category=='conventional combustion turbine'))
View(filter(master, overnight_category=='conventional combustion turbine' & is.na(base.overnight)))
unique(capitalcosts$year)
write.csv(master, 'master.csv', row.names=F)
names(fuelprices)
unique(fuelprices$year)
unique(master$overnight_category)
unique(master$year)
sorted(unique(master$year))
ordered(unique(master$year))
sort(unique(master$year))
source('data-raw/form860processed.R')
form860processed <- prep.form860processed("data-raw/form860raw.tsv", "data-raw/form860retirement.txt")
source('data-raw/form860processed.R')
form860processed <- prep.form860processed("data-raw/form860raw.tsv", "data-raw/form860retirement.txt")
devtools::use_data(form860processed, overwrite=TRUE)
source('data-raw/mapping.R')
mapping <- prep.mapping('data-raw/form860fuels.tsv', 'data-raw/overnight_categories.tsv')
source('data-raw/mapping.R')
mapping <- prep.mapping('data-raw/form860fuels.tsv', 'data-raw/overnight_categories.tsv')
source('data-raw/mapping.R')
mapping <- prep.mapping('data-raw/form860fuels.tsv', 'data-raw/overnight_categories.tsv')
categoriesfile
categories <- read.delim(categoriesfile) %>%
select(prime_mover, fuel, overnight_category) %>%
## COMBINE
mapping <- left_join(categories, fuels, by='fuel')
source('data-raw/mapping.R')
mapping <- prep.mapping('data-raw/form860fuels.tsv', 'data-raw/overnight_categories.tsv')
categories <- read.delim(categoriesfile) %>%
select(prime_mover, fuel, overnight_category)
mapping <- left_join(categories, fuels, by='fuel')
prep.mapping <- function(fuelsfile, categoriesfile)
{
## DATA
fuels <- read.delim(fuelsfile) %>%
select(fuel, fuel_general)
categories <- read.delim(categoriesfile) %>%
select(prime_mover, fuel, overnight_category)
## COMBINE
mapping <- left_join(categories, fuels, by='fuel')
}
source('data-raw/mapping.R')
mapping <- prep.mapping('data-raw/form860fuels.tsv', 'data-raw/overnight_categories.tsv')
devtools::use_data(mapping, overwrite=TRUE)
source('data-raw/fuelprices.R')
fuelprices <- prep.fuelrices("data-raw/energy.prices.txt.gz", "data-raw/uranium.prices.txt.gz")
fuelprices <- prep.fuelprices("data-raw/energy.prices.txt.gz", "data-raw/uranium.prices.txt.gz")
library(lubridate)
fuelprices <- prep.fuelprices("data-raw/energy.prices.txt.gz", "data-raw/uranium.prices.txt.gz")
names(gdpdef)
names(fuelprices)
source('data-raw/gdpdeflator.R')
gdpdeflator <- calc.deflator("data-raw/GDPDEF.csv", "1975")
gdpdeflator <- calc.gdpdeflator("data-raw/GDPDEF.csv", "1975")
names(gdpdeflator)
source('C:/Users/xavie/Desktop/energy.markets/data-raw/fuelprices.R')
fuelprices <- prep.fuelprices("data-raw/energy.prices.txt.gz", "data-raw/uranium.prices.txt.gz", gdpdeflator)
names(fuelprices)
source('data-raw/marginalcosts.R')
marginalcosts <- prep.marginalcosts(mapping, form860processed, fuelprices) # can include maximumheatrates by adding as argument
source('C:/Users/xavie/Desktop/energy.markets/data-raw/marginalcosts.R')
marginalcosts <- prep.marginalcosts(mapping, form860processed, fuelprices) # can include maximumheatrates by adding as argument
source('data-raw/marginalcosts.R')
marginalcosts <- prep.marginalcosts(mapping, form860processed, fuelprices) # can include maximumheatrates by adding as argument
source('C:/Users/xavie/Desktop/energy.markets/data-raw/marginalcosts.R')
marginalcosts <- prep.marginalcosts(mapping, form860processed, fuelprices) # can include maximumheatrates by adding as argument
devtools::use_data(marginalcosts, overwrite=TRUE)
source('data-raw/capitalcosts.R')
capitalcosts <- prep.capitalcosts("data-raw/overnight.cost.tsv", gdpdeflator)
names(gdpdeflator)
names(overnight)
overnight <- read.delim(aeofile)
names(overnight)
unique(overnight$online)
sort(unique(overnight$online))
sort(unique(overnight$year))
names(form860processed)
source('data-raw/capitalcosts.R')
capitalcosts <- prep.capitalcosts("data-raw/overnight.cost.tsv", gdpdeflator)
devtools::use_data(capitalcosts, overwrite=TRUE)
# year & in_service columns
source('data-raw/form860processed.R')
form860processed <- prep.form860processed("data-raw/form860raw.tsv", "data-raw/form860retirement.txt")
devtools::use_data(form860processed, overwrite=TRUE)
source('data-raw/mapping.R')
mapping <- prep.mapping('data-raw/form860fuels.tsv', 'data-raw/overnight_categories.tsv')
devtools::use_data(mapping, overwrite=TRUE)
source('data-raw/gdpdeflator.R')
gdpdeflator <- calc.gdpdeflator("data-raw/GDPDEF.csv", "1975") # reference year
source('data-raw/fuelprices.R')
# $/BTU
fuelprices <- prep.fuelprices("data-raw/energy.prices.txt.gz", "data-raw/uranium.prices.txt.gz", gdpdeflator)
devtools::use_data(fuelprices, overwrite=TRUE)
source('data-raw/marginalcosts.R')
# $/MWh
marginalcosts <- prep.marginalcosts(mapping, form860processed, fuelprices) # can include maximumheatrates by adding as argument
devtools::use_data(marginalcosts, overwrite=TRUE)
## Should use projected online year (1996-2022) instead of year of report (1997-2015)
source('data-raw/capitalcosts.R')
capitalcosts <- prep.capitalcosts("data-raw/overnight.cost.tsv", gdpdeflator)
devtools::use_data(capitalcosts, overwrite=TRUE)
names(form860processed)
names(capitalcosts)
names(marginalcosts)
names(fuelprices)
names(form860processed)
sum(is.na(form860processed$retirement))
sum(is.na(form860processed$retirement)) / nrow(form860processed)
sum(!is.na(form860processed$retirement))
